% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/Seurat_cluster.R
\name{Seurat_cluster}
\alias{Seurat_cluster}
\title{Seurat clustering}
\usage{
Seurat_cluster(
  object,
  norm.method,
  reduction = "pca",
  res = c(0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9, 1, 1.1, 1.2, 1.3, 1.4, 1.5),
  dims = 1:12,
  prune.SNN = 0,
  nn.method = "annoy",
  annoy.metric = "euclidean",
  nn.eps = 0,
  ...
)
}
\arguments{
\item{object}{Please specify a SCE object produced using IBRAP functions.}

\item{reduction}{Which dimensionality reduction assay would you like to use?}

\item{res}{This specifies the resolution to be passed down to seurat.}

\item{dims}{how many dimensionality reduction components should be used.}

\item{prune.SNN}{Sets the cutoff for acceptable Jaccard index when computing the neighborhood overlap for the SNN construction. Any edges with values less than or equal to this will be set to 0 and removed from the SNN graph. Essentially sets the strigency of pruning (0 — no pruning, 1 — prune everything).}

\item{nn.method}{Method for nearest neighbor finding. Options include: rann, annoy}

\item{annoy.metric}{Distance metric for annoy. Options include: euclidean, cosine, manhattan, and hamming}

\item{nn.eps}{Error bound when performing nearest neighbor seach using RANN; default of 0.0 implies exact nearest neighbor search}

\item{...}{Parameters to pass down to the FindClusters function.}

\item{multi.method}{TRUE/FALSE if more than one normalisation method is being used.}
}
\description{
This function utilises Seurats graph-based clustering alogrithm
}
\examples{
Seurat_cluster(object = sce_object, multi.method, reduction='pca', res=c(0.1,0.2,0.3,0.4,0.5,0.6,0.7,0.8,0.9,1,1.1,1.2,1.3,1.4,1.5), dims=1:12, prune.SNN=0, nn.method='annoy', annoy.metric='euclidean', nn.eps=0.0)
}
